class Emodel_Eio (Eo_Base, Emodel)
{
    legacy_prefix: null;
    constructors {
       constructor {
          /*@ Custom Emodel_Eio constructor. */
          /**
           * @def emodel_eio_constructor
           * @since 1.11
           *
           * @in path
           */
          params {
             @in const char *path; /*@ Root path provided by caller */
          }
       }
    }
    methods {
       dir_add {
            /*@ Create new empty directory.
              The new directory permissions will follow
              the rule (mode & ~umask & 0777).
              The directory is a new child.
              @see Eio.h
              */
            /**
             * @def emodel_eio_dir_add
             * @since 1.11
             *
             * @in child_add_cb
             * @in name
             */
            params {
                Emodel_Cb child_add_cb; /*@  Emodel notification callback. */
                const char *name; /*@  Directory name to be created. */
            }
       }
       children_filter_set {
            /*@ Set children filter callback.
              This function sets, along with user's private data userdata,
              the Eio's Eio_Filter_Direct_Cb which is a mid-step
              before receiving the real data. Once in filter
              callback we can decide, by returning either EINA_FALSE, to abort
              the notification or EINA_TRUE to keep it.
              @see Eio.h
              @see emodel_eio_emodel_children_slice_fetch
             */
            /**
             * @def emodel_eio_children_filter_set
             * @since 1.11
             *
             * @in filter_cb
             * @in userdata
             *
             */
             params {
                 Eio_Filter_Direct_Cb filter_cb; /*@  Filter callback */
                 void *userdata; /*@  User's private data */
             }
       }
       path_get {
            /*@ Get path.
              Get the object's path.
              @see emodel_eio_constructor
              */
            /**
             * @def emodel_eio_path_get
             * @since 1.11
             *
             * @out path
             */
             params {
                 const char **path; /*@ Path is saved here. */
             }
       }
    }
   implements {
      Eo_Base.destructor;
      Eo_Base.constructor;
      Emodel.prop_list;
      Emodel.prop_fetch;
      Emodel.prop_set;
      Emodel.load;
      Emodel.unload;
      Emodel.child_del;
      Emodel.children_fetch;
      Emodel.children_slice_fetch;
      Emodel.children_count_get;
      Emodel.child_select;
      Emodel.child_select_eval;
   }
}
