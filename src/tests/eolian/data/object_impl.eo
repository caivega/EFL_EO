class Object (Base) {
   constructors {
      constructor_1 {
         params {
            @in int a;
            @in char b;
         }
      }
      constructor_2 {
      }
   }
   properties {
      a {
         set {
            return Eina_Bool(EINA_FALSE);
            value: const;
         }
         get {
         }
         keys {
            const(char)* part;
         }
         values {
            own(Eina_List*)<int> value;
         }
      }
      b {
         set {
         }
         get {
            /* set as virtual pure - no implementation expected */
         }
         values {
            own(Eina_List*)<int> value;
         }
      }
   }
   methods {
      foo1 {
         /*@ comment foo */
         params {
            @in int a; /*@ a */
            @inout char *b;
            @out double c;
         }
         return char *(NULL); /*@ comment for method return */
      }
      foo2 {
         /*@ comment foo */
         params {
            @in int a;
            @in const(char)* b;
         }
         const;
      }
      pure_foo3 {
         /* set as virtual pure - no implementation expected */
      }
   }
   implements {
      class.constructor;
      class.destructor;
      Base.constructor;
      Base.destructor;
      virtual.pure_foo3;
      virtual.b.get;
   }
}
